./app/app/admin/blog/[id]/edit/page.js
Error: 
  × the name `useState` is defined multiple times
     ╭─[/home/runner/workspace/frontend/app/app/admin/blog/[id]/edit/page.js:1:1]
   1 │ 
   2 │ 'use client';
   3 │ 
   4 │ import { useState, useEffect } from 'react';
     ·          ────┬───
     ·              ╰── previous definition of `useState` here
   5 │ import { useRouter, useParams } from 'next/navigation';
   6 │ 
   7 │ export default function EditBlogPostPage() {
   8 │   const router = useRouter();
   9 │   const params = useParams();
  10 │   const [formData, setFormData] = useState({
  11 │     title: '',
  12 │     subtitle: '',
  13 │     content: '',
  14 │     category: 'Product Updates',
  15 │     author: '',
  16 │     excerpt: '',
  17 │     featured: false,
  18 │     status: 'draft'
  19 │   });
  20 │   const [loading, setLoading] = useState(true);
  21 │   const [error, setError] = useState(null);
  22 │   const [saving, setSaving] = useState(false);
  23 │ 
  24 │   const categories = ['Product Updates', 'HIPAA Compliance', 'Training', 'Risk Management', 'Policy Updates', 'Best Practices'];
  25 │ 
  26 │   useEffect(() => {
  27 │     fetchBlogPost();
  28 │   }, [params.id]);
  29 │ 
  30 │   const fetchBlogPost = async () => {
  31 │     console.log('=== EDIT PAGE DEBUG START ===');
  32 │     console.log('Edit page: Fetching blog post for ID:', params.id);
  33 │     try {
  34 │       const token = localStorage.getItem('token');
  35 │       console.log('Edit page: Token exists:', !!token);
  36 │       console.log('Edit page: Making request to:', `/api/blog/admin/${params.id}`);
  37 │ 
  38 │       const response = await fetch(`/api/blog/admin/${params.id}`, {
  39 │         headers: {
  40 │           'Authorization': `Bearer ${token}`
  41 │         }
  42 │       });
  43 │ 
  44 │       console.log('Edit page: Response status:', response.status);
  45 │       console.log('Edit page: Response ok:', response.ok);
  46 │ 
  47 │       if (response.ok) {
  48 │         console.log('Edit page: Response is OK, parsing JSON...');
  49 │         const data = await response.json();
  50 │         console.log('Edit page: Successfully loaded blog post data:', data);
  51 │         console.log('Edit page: Blog post title:', data.title);
  52 │         console.log('Edit page: Blog post ID:', data.id);
  53 │         
  54 │         setFormData({
  55 │           title: data.title || '',
  56 │           subtitle: data.subtitle || '',